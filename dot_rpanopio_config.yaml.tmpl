# Custom personal config files used by my installation scripts
# TODO use another template (.chezmoitemplates) to refactor the multiple duplicates

# List of programs to install
# installer: 
# aliases: optional aliases to crosscheck for install. EG neovim -> nvim 
cli-programs:
  # Development Tools
  - package: git
    installer: {{ if eq .chezmoi.os "darwin" -}}
      brew
    {{- else if eq .chezmoi.osRelease.id "ubuntu" -}}
      apt-get
    {{- end }}
    aliases: []
{{- if eq .chezmoi.os "darwin" }}
  # xcode should cover most of the required clitools
  # use development on Linux env if need be
  - package: llvm
    installer: brew
    aliases: [clang]  
{{- else if eq .chezmoi.osRelease.id "ubuntu" }}
  - package: build-essential
    installer: apt-get
    aliases: [gcc, make, g++]
  - package: clang
    installer: apt-get
    aliases: []
  - package: valgrind
    installer: apt-get
    aliases: []
{{- end }}

  # Languages
  - package: python3
    installer: {{ if eq .chezmoi.os "darwin" -}}
      brew
    {{- else if eq .chezmoi.osRelease.id "ubuntu" -}}
      apt-get
    {{- end }}
    aliases: []
  # JS 
  - package: nodejs
    installer: {{ if eq .chezmoi.os "darwin" -}}
      brew
    {{- else if eq .chezmoi.osRelease.id "ubuntu" -}}
     apt
    {{- end }}
    aliases: []
  - package: npm
    installer: {{ if eq .chezmoi.os "darwin" -}}
      brew
    {{- else if eq .chezmoi.osRelease.id "ubuntu" -}}
     apt
    {{- end }}
    aliases: []
  # TODO dotnet SDK and runtimes
  # TODO java SDK and runtimes

  # Productivity Tools
  - package: neovim
    installer: {{ if eq .chezmoi.os "darwin" -}}
      brew
    {{- else if eq .chezmoi.osRelease.id "ubuntu" -}}
      apt-get
    {{- end }}
    aliases: [nvim]  
  - package: tmux
    installer: {{ if eq .chezmoi.os "darwin" -}}
      brew
    {{- else if eq .chezmoi.osRelease.id "ubuntu" -}}
      apt-get
    {{- end }}
    aliases: []
  - package: tree
    installer: {{ if eq .chezmoi.os "darwin" -}}
      brew
    {{- else if eq .chezmoi.osRelease.id "ubuntu" -}}
      apt-get
    {{- end }}
    aliases: []
  # open source vpn client, compatible with fortinet vpns
  - package: openfortivpn
    installer: {{ if eq .chezmoi.os "darwin" -}}
      brew
    {{- else if eq .chezmoi.osRelease.id "ubuntu" -}}
      apt-get
    {{- end }}
    aliases: []
  # dotfile manager
  - package: chezmoi
    installer: brew
    aliases: []
  # clipboard piping tool
{{- if eq .chezmoi.os "darwin" }} 
  # pbcopy should be installed?
{{ else if eq .chezmoi.osRelease.id "ubuntu" }}
  - package: xclip
    installer: apt
    aliases: []
{{ end -}}
# VSCode installation
# TODO maybe include a Docker auto setup as well
# This wonk is to prevent checking non-existing data
{{ if eq .chezmoi.os "darwin" }}
  - package: visual-studio-code
    installer: brew
    aliases: [code]
{{ else if eq .chezmoi.osRelease.id "ubuntu" }}
  # Only (x86_64 or AMD64 linux) - Homebrew installation
  {{ if (or (eq .chezmoi.arch "x86_64") (eq .chezmoi.arch "amd64")) }}
  # Do not install on WSL, it should instead use windows native version, and pipe it to WSL.
  {{ if not (eq (substr (int (sub (len .chezmoi.kernel.osrelease) 4)) (len .chezmoi.kernel.osrelease) .chezmoi.kernel.osrelease) "WSL2")}}
  - package: visual-studio-code
    installer: brew
    aliases: [code]
  {{- end }}
  {{- end }}  
{{ end }}

# custom unvalidated installation commands
blind-installs:
  # Oh-My-ZSH plugins
  # HARD CODED PATHS, cannot reliably source exported paths during installation process
  # nor should I even do that, seems slow and convoluted
  # since these are blind install anyways, im fine with hard coding them 

{{ if eq .chezmoi.os "darwin" }}
  - command: echo "running OSX blind installs"
  # autosuggesions plugin
  - command: git clone https://github.com/zsh-users/zsh-autosuggestions.git $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions
  # zsh-syntax-highlighting plugin
  - command: git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
  # zsh-fast-syntax-highlighting plugin
  - command: git clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git $HOME/.oh-my-zsh/custom/plugins/fast-syntax-highlighting
# zsh-autocomplete plugin
  - command: git clone --depth 1 -- https://github.com/marlonrichert/zsh-autocomplete.git $HOME/.oh-my-zsh/custom/plugins/zsh-autocomplete
{{ else if eq .chezmoi.osRelease.id "ubuntu" }}
  - command: echo "running Ubuntu blind installs"
  - command: echo $HOME
  # autosuggesions plugin
  - command: git clone https://github.com/zsh-users/zsh-autosuggestions.git $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions
  # zsh-syntax-highlighting plugin
  - command: git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
  # zsh-fast-syntax-highlighting plugin
  - command: git clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git $HOME/.oh-my-zsh/custom/plugins/fast-syntax-highlighting
# zsh-autocomplete plugin
  - command: git clone --depth 1 -- https://github.com/marlonrichert/zsh-autocomplete.git $HOME/.oh-my-zsh/custom/plugins/zsh-autocomplete
{{ end }}


# leave this trailing comment for the parser